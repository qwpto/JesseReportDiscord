# this file is *not* meant to cover or endorse the use of GitHub Actions, but rather to
# help test this project

name: Test

on: [push, pull_request]

jobs:
  test:
    strategy:
      matrix:
        python: ['3.8', '3.9']
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Set up ta-lib dir
    if: ${{ runner.os == 'Linux' }}
    run: |
        mkdir -p $HOME/.local/ta-lib
        echo "LD_LIBRARY_PATH=$HOME/.local/ta-lib/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
        echo "TA_INCLUDE_PATH=$HOME/.local/ta-lib/include" >> $GITHUB_ENV
        echo "TA_LIBRARY_PATH=$HOME/.local/ta-lib/lib" >> $GITHUB_ENV
    - name: Set up ta-lib cache
    if: ${{ runner.os == 'Linux' }}
    uses: actions/cache@v2
    id: talib-cache
    with:
        path: |
            ~/.local/ta-lib/lib
            ~/.local/ta-lib/include
        key: talib-cache-v0.4.0
    - name: Install ta-lib mac / windows
    run: |
        if ([ "$RUNNER_OS" = "macOS" ]); then
        brew install ta-lib
        fi
        if ([ "$RUNNER_OS" = "Windows" ]); then
        curl -sL http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-msvc.zip -o $GITHUB_WORKSPACE/ta-lib.zip --create-dirs && 7z x $GITHUB_WORKSPACE/ta-lib.zip -o/c/ta-lib && mv /c/ta-lib/ta-lib/* /c/ta-lib/ && rm -rf /c/ta-lib/ta-lib && cd /c/ta-lib/c/make/cdr/win32/msvc && nmake
        fi
    - name: Install ta-lib Linux
    if: steps.talib-cache.outputs.cache-hit != 'true'
    run: |
        wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz -q && tar -xzf ta-lib-0.4.0-src.tar.gz
        cd ta-lib/
        ./configure --prefix=$HOME/.local/ta-lib
        make
        sudo make install
        cd    
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python }}
    - name: Install test dependencies
      run: python -m pip install -U tox
    - name: Test
      run: python -m tox -e py
